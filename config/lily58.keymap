/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt { quick-tap-ms = <150>; };

&sl { /delete-property/ quick-release; };

&gresc {
    keep-mods = <(MOD_RGUI|MOD_LGUI)>;
    mods = <(MOD_LGUI|MOD_RGUI)>;
};

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE MINUS>; };

/ {
    behaviors {
        lh_hm: lh_hm {
            compatible = "zmk,behavior-hold-tap";
            label = "left_hand_homerow_mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 34 35 43 44 45 46 47 48 49 55 56 57 58 59 50 51 52 53 54 0 12 24 36>;
            require-prior-idle-ms = <75>;
        };

        rh_hm: rh_hm {
            compatible = "zmk,behavior-hold-tap";
            label = "right_hand_homerow_mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 40 39 50 51 52 53 54 55 56 57 58 59 17 29 41 42 11 23 35 49>;
            hold-trigger-on-release;
            require-prior-idle-ms = <75>;
        };

        smart_shft: smart_shft {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHFT";
            bindings = <&quick_sk LSHFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        quick_sk: quick_sk {
            compatible = "zmk,behavior-sticky-key";
            label = "QUICK_STICKY_KEY";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <900>;
            quick-release;
        };

        quick_hold_tap: quick_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_HOLD_TAP";
            bindings = <&quick_sk>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <120>;
            flavor = "balanced";
        };

        lh_lt: lh_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "left_hand_layer_tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 50 51 52 53 54 55 56 57 58 59 30 34 35 43 44 45 46 47 48 49 56 57 58 59 0 12 24 36>;
            hold-trigger-on-release;
            require-prior-idle-ms = <60>;
        };

        rh_lt: rh_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "right_hand_layer_tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 50 51 52 53 54 55 56 57 58 59 29 41 42 11 23 35 49>;
            hold-trigger-on-release;
            require-prior-idle-ms = <60>;
        };

        layer_gresc: layer_gresc {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_GRESC";
            bindings = <&mo>, <&gresc>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "hold-preferred";
        };

        layer_switcher: layer_switcher {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_SWITCHER";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        repeat_lt_sym_u: repeat_lt_sym_u {
            compatible = "zmk,behavior-mod-morph";
            label = "REPEAT_LT_SYM_U";
            bindings = <&rh_lt 4 U>, <&kp U>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
            keep-mods = <(MOD_LCTL)>;
        };

        repeat_space: repeat_space {
            compatible = "zmk,behavior-mod-morph";
            label = "REPEAT_SPACE";
            bindings = <&lt 7 SPACE>, <&kp SPACE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        thumb_lt: thumb_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "hold-preferred";
        };

        lsk: lsk {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer/Sticky";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };
    };

    macros {
        lang_switch: lang_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 1 &kp LA(SPACE)>;
            label = "LANG_SWITCH";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        graphite_layer {
            bindings = <
&kp GRAVE          &kp N1          &kp N2         &kp N3          &kp N4            &kp N5                                             &kp N6        &kp N7         &kp N8          &kp N9         &kp N0          &kp BSLH
&thumb_lt 4 LBKT   &kp B           &kp L          &kp D           &kp W             &kp Q                                              &kp SQT       &kp F          &kp O           &kp U          &kp J           &thumb_lt 4 RBKT
&thumb_lt 4 MINUS  &lh_hm LCTRL N  &lh_hm LALT R  &lh_hm LSHFT T  &lh_hm LCMD S     &kp G                                              &kp K         &rh_hm RCMD H  &rh_hm RSHFT A  &rh_hm LALT E  &rh_hm RCTRL I  &thumb_lt 4 FSLH
&kp EQUAL          &kp Z           &kp X          &kp M           &kp C             &kp V          &kp C_VOL_DN       &kp C_VOL_UP     &kp P         &kp Y          &kp DOT         &kp SEMI       &kp COMMA       &lang_switch
                                                  &kp LCTRL       &layer_gresc 5 0  &repeat_space  &thumb_lt 4 TAB    &thumb_lt 4 RET  &lsk 3 LSHFT  &kp BSPC       &mo 8
            >;

            label = "Graphite";
        };

        qwerty_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans     &trans   &trans    &trans
&trans  &kp Q   &kp W   &kp E   &kp R   &kp T                     &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&trans  &kp A   &kp S   &kp D   &kp F   &kp G                     &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&trans  &kp Z   &kp X   &kp C   &kp V   &kp B   &trans    &trans  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;

            label = "Qwrt";
        };

        num_layer {
            bindings = <
&none  &none      &none          &none      &none          &none                          &none      &none    &none   &none   &none      &none
&none  &none      &lt 4 LT       &none      &kp GT         &none                          &none      &kp N7   &kp N8  &kp N9  &kp MINUS  &none
&none  &sk LCTRL  &mt LALT LPAR  &sk LSHFT  &mt LCMD RPAR  &none                          &kp UNDER  &kp N4   &kp N5  &kp N6  &kp N0     &kp FSLH
&none  &none      &none          &none      &none          &none      &trans     &trans   &kp STAR   &kp N1   &kp N2  &kp N3  &kp PLUS   &trans
                                 &none      &kp ESC        &kp SPACE  &kp TAB    &kp RET  &kp BSPC   &kp DEL  &none
            >;

            label = "Num";
        };

        num_l {
            label = "NumL";
            bindings = <
&none      &none     &none   &none   &none    &none                          &none     &none     &none      &none     &none      &none
&none      &kp FSLH  &kp N7  &kp N8  &kp N9   &kp FSLH                       &none     &none     &none      &none     &kp BSPC   &kp BSPC
&kp MINUS  &kp N0    &kp N4  &kp N5  &kp N6   &kp PLUS                       &none     &kp RGUI  &kp RSHFT  &kp LALT  &kp RCTRL  &none
&none      &kp N0    &kp N1  &kp N2  &kp N3   &kp STAR   &trans     &trans   &none     &none     &none      &none     &none      &trans
                             &none   &kp DOT  &kp SPACE  &kp TAB    &kp RET  &kp BSPC  &kp DEL   &none
            >;
        };

        sym_layer {
            bindings = <
&kp N1  &kp N2             &kp N3           &kp N4             &kp N5             &none                              &none      &kp N6             &kp N7             &kp N8            &kp N9              &kp N0
&none   &kp GRAVE          &kp LT           &kp GT             &kp FSLH           &kp DOT                            &kp PIPE   &kp TILDE          &kp LBKT           &kp RBKT          &kp AT              &none
&none   &lh_hm LCTRL EXCL  &lh_hm LALT DQT  &lh_hm LSHFT PLUS  &lh_hm LCMD EQUAL  &kp MINUS                          &kp AMPS   &rh_hm RCMD COLON  &rh_hm RSHFT LPAR  &rh_hm LALT RPAR  &rh_hm RCTRL PRCNT  &none
&none   &kp BSLH           &kp BSLH         &kp UNDER          &kp HASH           &kp STAR   &kp K_MUTE    &kp C_PP  &kp CARET  &kp DLLR           &kp LBRC           &kp RBRC          &kp QMARK           &trans
                                            &none              &trans             &trans     &trans        &trans    &trans     &trans             &none
            >;

            label = "Code";
        };

        muz_layer {
            bindings = <
&none  &none      &none      &none         &none           &none                                   &none    &none   &none   &none   &none  &none
&none  &none      &none      &kp LG(BSLH)  &kp LS(LG(N4))  &kp LS(LG(N5))                          &kp F12  &kp F7  &kp F8  &kp F9  &none  &none
&none  &sk LCTRL  &sk LALT   &sk LSHFT     &sk LCMD        &caps_word                              &kp F11  &kp F4  &kp F5  &kp F6  &none  &none
&none  &kp LG(Z)  &kp LG(X)  &kp LG(C)     &kp LG(V)       &kp LG(LS(Z))   &kp K_MUTE    &kp C_PP  &kp F10  &kp F1  &kp F2  &kp F3  &none  &kp LC(LG(Q))
                             &none         &trans          &trans          &trans        &trans    &trans   &mo 8   &none
            >;

            label = "Muz";
        };

        fn_layer {
            label = "Fn";
            bindings = <
&none  &none    &none   &none   &none   &none                               &none   &none     &none      &none     &none      &none
&none  &kp F12  &kp F7  &kp F8  &kp F9  &none                               &none   &none     &none      &none     &none      &none
&none  &kp F11  &kp F4  &kp F5  &kp F6  &caps_word                          &none   &kp RGUI  &kp RSHFT  &kp LALT  &kp RCTRL  &none
&none  &kp F10  &kp F1  &kp F2  &kp F3  &none       &kp K_MUTE    &kp C_PP  &none   &none     &none      &none     &none      &trans
                        &none   &none   &trans      &trans        &trans    &trans  &trans    &none
            >;
        };

        nav_layer {
            bindings = <
&none  &none         &none         &none      &none      &none                                  &none     &none      &none     &none      &none    &none
&none  &sk LC(LCMD)  &sk LA(LCMD)  &none      &kp LG(A)  &none                                  &none     &kp PG_UP  &kp UP    &kp PG_DN  &none    &none
&none  &sk LCTRL     &sk LALT      &sk LSHFT  &sk LCMD   &caps_word                             &kp HOME  &kp LEFT   &kp DOWN  &kp RIGHT  &kp END  &none
&none  &kp LG(Z)     &kp LG(X)     &kp LG(C)  &kp LG(V)  &kp LS(LG(Z))  &kp K_MUTE    &kp C_PP  &kp H     &kp J      &kp K     &kp L      &none    &none
                                   &none      &to 0      &kp SPACE      &kp TAB       &kp RET   &kp BSPC  &kp DEL    &none
            >;

            label = "Nav";
        };

        sys_layer {
            bindings = <
&none  &none         &none         &none         &none         &none                           &none        &none       &none         &none     &none         &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR                      &none        &none       &kp C_VOL_UP  &none     &kp C_BRI_UP  &none
&none  &none         &none         &none         &none         &none                           &none        &kp C_MUTE  &kp C_VOL_DN  &kp C_PP  &kp C_BRI_DN  &none
&none  &none         &none         &none         &out OUT_USB  &out OUT_BLE  &trans    &trans  &bootloader  &none       &none         &none     &none         &kp LC(LG(Q))
                                   &none         &none         &none         &none     &none   &none        &none       &none
            >;

            label = "Sys";
        };
    };
};
