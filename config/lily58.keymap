/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt { quick-tap-ms = <150>; };

&sl { /delete-property/ quick-release; };

&gresc {
    keep-mods = <(MOD_RGUI|MOD_LGUI)>;
    mods = <(MOD_LGUI|MOD_RGUI)>;
};

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE MINUS>; };

/ {
    behaviors {
        lh_hm: lh_hm {
            compatible = "zmk,behavior-hold-tap";
            label = "left_hand_homerow_mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 34 35 43 44 45 46 47 48 49 55 56 57 58 59 50 51 52 53 54 0 12 24 36>;
            require-prior-idle-ms = <75>;
        };

        rh_hm: rh_hm {
            compatible = "zmk,behavior-hold-tap";
            label = "right_hand_homerow_mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 40 39 50 51 52 53 54 55 56 57 58 59 17 29 41 42 11 23 35 49>;
            hold-trigger-on-release;
            require-prior-idle-ms = <75>;
        };

        smart_shft: smart_shft {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHFT";
            bindings = <&quick_sk LSHFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        quick_sk: quick_sk {
            compatible = "zmk,behavior-sticky-key";
            label = "QUICK_STICKY_KEY";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <900>;
            quick-release;
        };

        thumb_lt: thumb_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "hold-preferred";
        };

        layer_sshft: lsk {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_SSHFT";
            bindings = <&mo>, <&smart_shft>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };

        dot_excl: dot_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_EXCL";
            bindings = <&kp DOT>, <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        comm_qmrk: comm_qmrk {
            compatible = "zmk,behavior-mod-morph";
            label = "COMM_QMRK";
            bindings = <&kp COMMA>, <&kp QMARK>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        lang_switch: lang_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 1 &kp LA(SPACE)>;
            label = "LANG_SWITCH";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        graphite_layer {
            bindings = <
&kp LBKT           &kp N1          &kp N2         &kp N3          &kp N4         &kp N5                                           &kp N6                &kp N7           &kp N8          &kp N9         &kp N0          &kp RBKT
&kp GRAVE          &kp B           &kp L          &kp D           &kp W          &kp Q                                            &kp SQT               &kp F            &kp O           &kp U          &kp J           &kp BSPC
&thumb_lt 3 MINUS  &lh_hm LCTRL N  &lh_hm LALT R  &lh_hm LSHFT T  &lh_hm LCMD S  &kp G                                            &kp K                 &rh_hm RCMD H    &rh_hm RSHFT A  &rh_hm LALT E  &rh_hm RCTRL I  &thumb_lt 3 FSLH
&lang_switch       &kp Z           &kp X          &kp M           &kp C          &kp V        &kp C_VOL_DN       &kp C_VOL_UP     &kp P                 &kp Y            &dot_excl       &kp SEMI       &comm_qmrk      &lang_switch
                                                  &mo 6           &mt LCTRL ESC  &lt 5 SPACE  &thumb_lt 3 TAB    &thumb_lt 3 RET  &layer_sshft 2 LSHFT  &thumb_lt 4 TAB  &mo 6
            >;

            label = "Graphite";
        };

        qwerty_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans     &trans   &trans    &trans
&trans  &kp Q   &kp W   &kp E   &kp R   &kp T                     &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&trans  &kp A   &kp S   &kp D   &kp F   &kp G                     &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&trans  &kp Z   &kp X   &kp C   &kp V   &kp B   &trans    &trans  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;

            label = "Qwrt";
        };

        num {
            label = "Num";
            bindings = <
&none      &none      &none   &none   &none    &none                          &none     &none     &none      &none     &none      &none
&none      &kp EQUAL  &kp N7  &kp N8  &kp N9   &kp FSLH                       &none     &none     &none      &none     &kp DEL    &kp BSPC
&kp MINUS  &kp N0     &kp N4  &kp N5  &kp N6   &kp PLUS                       &none     &kp RGUI  &kp RSHFT  &kp LALT  &kp RCTRL  &none
&none      &kp N0     &kp N1  &kp N2  &kp N3   &kp STAR   &trans     &trans   &none     &none     &none      &none     &none      &trans
                              &none   &kp DOT  &kp SPACE  &kp TAB    &kp RET  &kp BSPC  &kp DEL   &none
            >;
        };

        sym_layer {
            bindings = <
&kp N1  &kp N2             &kp N3            &kp N4              &kp N5             &none                              &none      &kp N6            &kp N7             &kp N8           &kp N9              &kp N0
&none   &kp FSLH           &kp LT            &kp GT              &kp MINUS          &kp PIPE                           &kp SQT    &kp AT            &kp LBKT           &kp RBKT         &kp BSLH            &kp BSPC
&none   &lh_hm LCTRL EXCL  &lh_hm LALT STAR  &lh_hm LSHFT COLON  &lh_hm LCMD EQUAL  &kp AMPS                           &kp HASH   &rh_hm RCMD LPAR  &rh_hm RSHFT RPAR  &rh_hm LALT DQT  &rh_hm RCTRL PRCNT  &kp FSLH
&none   &kp QMARK          &kp PLUS          &kp LBRC            &kp RBRC           &kp TILDE  &kp K_MUTE    &kp C_PP  &kp CARET  &kp DLLR          &kp DOT            &kp SEMI         &kp COMMA           &trans
                                             &none               &trans             &trans     &trans        &trans    &trans     &trans            &none
            >;

            label = "Code";
        };

        fn_layer {
            label = "Fn";
            bindings = <
&none  &none    &none   &none   &none   &none                               &none   &none     &none      &none     &none      &none
&none  &kp F12  &kp F7  &kp F8  &kp F9  &none                               &none   &none     &none      &none     &none      &none
&none  &kp F11  &kp F4  &kp F5  &kp F6  &caps_word                          &none   &kp RGUI  &kp RSHFT  &kp LALT  &kp RCTRL  &none
&none  &kp F10  &kp F1  &kp F2  &kp F3  &none       &kp K_MUTE    &kp C_PP  &none   &none     &none      &none     &none      &trans
                        &none   &none   &trans      &trans        &trans    &trans  &trans    &none
            >;
        };

        nav_layer {
            bindings = <
&none  &none         &none         &none      &none                 &none                                   &none     &none      &none     &none      &none    &none
&none  &sk LC(LCMD)  &sk LA(LCMD)  &none      &kp LS(LG(NUMBER_4))  &kp LS(LG(N5))                          &none     &kp PG_UP  &kp UP    &kp PG_DN  &kp DEL  &kp BSPC
&none  &sk LCTRL     &sk LALT      &sk LSHFT  &sk LCMD              &kp LG(A)                               &kp HOME  &kp LEFT   &kp DOWN  &kp RIGHT  &kp END  &none
&none  &kp LG(Z)     &kp LG(X)     &kp LG(C)  &kp LG(V)             &kp LS(LG(Z))   &kp K_MUTE    &kp C_PP  &kp H     &kp J      &kp K     &kp L      &none    &none
                                   &none      &to 0                 &kp SPACE       &kp TAB       &kp RET   &kp BSPC  &kp DEL    &none
            >;

            label = "Nav";
        };

        sys_layer {
            bindings = <
&none  &none         &none         &none         &none         &none                           &none        &none       &none         &none     &none         &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR                      &none        &none       &kp C_VOL_UP  &none     &kp C_BRI_UP  &none
&none  &none         &none         &none         &none         &none                           &none        &kp C_MUTE  &kp C_VOL_DN  &kp C_PP  &kp C_BRI_DN  &none
&none  &none         &none         &none         &out OUT_USB  &out OUT_BLE  &trans    &trans  &bootloader  &none       &none         &none     &none         &kp LC(LG(Q))
                                   &none         &none         &none         &none     &none   &none        &none       &none
            >;

            label = "Sys";
        };
    };
};
